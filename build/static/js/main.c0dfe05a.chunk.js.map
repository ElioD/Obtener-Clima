{"version":3,"sources":["Components/Header.js","Components/Error.js","Components/Formulario.js","Components/Clima.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","titulo","react_default","a","createElement","className","href","Error","mensaje","Formulario","busqueda","guadarBusqueda","guardarConsultar","_useState","useState","_useState2","Object","slicedToArray","error","guardarError","ciudad","pais","handleChange","e","objectSpread2","defineProperty","target","name","value","onSubmit","preventDefault","trim","Components_Error","type","id","onChange","htmlFor","Clima","resultado","console","log","main","parseFloat","temp","toFixed","temp_max","temp_min","App","componente","_useState3","_useState4","consultar","_useState5","_useState6","guardarResultado","_useState7","_useState8","useEffect","asyncToGenerator","regenerator_default","mark","_callee","url","respuesta","wrap","_context","prev","next","concat","fetch","sent","json","cod","stop","apply","this","arguments","consultarApi","Components_Clima","react","Components_Header","Components_Formulario","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0dfe05a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = ({ titulo }) => {\n\treturn (\n\t\t<nav>\n\t\t\t<div className=\"nav-wrapper light-blue darken-2\">\n\t\t\t\t<a href=\"#!\" className=\"brand-logo\">\n\t\t\t\t\t{titulo}\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Error = ({ mensaje }) => {\n\treturn <p className=\"red darken-4 error\">{mensaje}</p>;\n};\n\nexport default Error;\n","import React, { useState } from 'react';\nimport Error from './Error';\n\nconst Formulario = ({ busqueda, guadarBusqueda, guardarConsultar }) => {\n\tconst [ error, guardarError ] = useState(false);\n\n\t//Extraer datos\n\tconst { ciudad, pais } = busqueda;\n\n\t//Guardar datos en el state\n\tconst handleChange = (e) => {\n\t\tguadarBusqueda({\n\t\t\t...busqueda,\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t};\n\n\t//Cuando el usuario manda el forumario\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t//Validar\n\t\tif (ciudad.trim() === '' || ciudad.trim() === '') {\n\t\t\tguardarError(true);\n\t\t\treturn;\n\t\t}\n\t\tguardarError(false);\n\n\t\t//Pasarlo al componente principal\n\t\tguardarConsultar(true);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t{error ? <Error mensaje=\"Todos los campos son obligatorios\" /> : null}\n\t\t\t<div className=\"input-field col s12\">\n\t\t\t\t<input type=\"text\" name=\"ciudad\" id=\"ciudad\" value={ciudad} onChange={handleChange} />\n\t\t\t\t<label htmlFor=\"ciudad\">Ciudad: </label>\n\t\t\t</div>\n\t\t\t<div className=\"input-field col s12\" onChange={handleChange}>\n\t\t\t\t<select name=\"pais\" id=\"pais\" value={pais}>\n\t\t\t\t\t<option value=\"\">-- Seleccione un país --</option>\n\t\t\t\t\t<option value=\"US\">Estados Unidos</option>\n\t\t\t\t\t<option value=\"MX\">México</option>\n\t\t\t\t\t<option value=\"AR\">Argentina</option>\n\t\t\t\t\t<option value=\"CO\">Colombia</option>\n\t\t\t\t\t<option value=\"CR\">Costa Rica</option>\n\t\t\t\t\t<option value=\"ES\">España</option>\n\t\t\t\t\t<option value=\"PE\">Perú</option>\n\t\t\t\t</select>\n\t\t\t\t<label htmlFor=\"pais\">País: </label>\n\t\t\t</div>\n\n\t\t\t<div className=\"input-field col s12\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvalue=\"Buscar clima\"\n\t\t\t\t\tclassName=\"waves-effect waves-ligt btn-large btn-block yellow accent-4\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default Formulario;\n","import React from 'react';\n\nconst Clima = ({ resultado }) => {\n\t//Estraer los valores\n\n\tconsole.log(resultado);\n\tconst { name, main } = resultado;\n\n\tif (!name) return null;\n\n\t//Grados Kelvin\n\tconst kelvin = 273.15;\n\n\treturn (\n\t\t<div className=\"card-panel white col s12\">\n\t\t\t<div className=\"black-text\">\n\t\t\t\t<h2>El clima de {name} es : </h2>\n\t\t\t\t<p className=\"temperatura\">\n\t\t\t\t\t{parseFloat(main.temp - kelvin, 10).toFixed(2)} <span>&#x2103;</span>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tTemperatura Máxima: {parseFloat(main.temp_max - kelvin, 10).toFixed(2)} <span>&#x2103;</span>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tTemperatura Minina:  {parseFloat(main.temp_min - kelvin, 10).toFixed(2)} <span>&#x2103;</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Clima;\n","import React, { Fragment, useState, useEffect, Component } from 'react';\nimport './index.css';\nimport Header from './Components/Header';\nimport Formulario from './Components/Formulario';\nimport Clima from './Components/Clima';\nimport Error from './Components/Error';\n\nfunction App() {\n\t//state\n\tconst [ busqueda, guadarBusqueda ] = useState({\n\t\tciudad: '',\n\t\tpais: ''\n\t});\n\tconst [ consultar, guardarConsultar ] = useState(false);\n\tconst [ resultado, guardarResultado ] = useState({});\n\tconst [ error, guardarError ] = useState(false);\n\n\t//Extraer dato\n\tconst { ciudad, pais } = busqueda;\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst consultarApi = async () => {\n\t\t\t\tconst appId = '796b26bd3bbbdae39b2950e2f8a1d566';\n\t\t\t\tconst url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n\n\t\t\t\tconst respuesta = await fetch(url);\n\t\t\t\tconst resultado = await respuesta.json();\n\n\t\t\t\tguardarResultado(resultado);\n\t\t\t\tguardarConsultar(false);\n\n\t\t\t\t//Detecta si hubo un error\n\t\t\t\tif (resultado.cod === '404') {\n\t\t\t\t\tguardarError(true);\n\t\t\t\t} else {\n\t\t\t\t\tguardarError(false);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (consultar) {\n\t\t\t\tconsultarApi();\n\t\t\t}\n\t\t},\n\t\t[ consultar ]\n\t);\n\n\tlet componente;\n\n\tif (error) {\n\t\tcomponente = <Error mensaje=\"No hay resultados\" />;\n\t} else {\n\t\tcomponente = <Clima resultado={resultado} />;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Header titulo=\"Clima App\" />\n\n\t\t\t<div className=\"contenedor-form\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col m6  s12\">\n\t\t\t\t\t\t\t<Formulario\n\t\t\t\t\t\t\t\tbusqueda={busqueda}\n\t\t\t\t\t\t\t\tguadarBusqueda={guadarBusqueda}\n\t\t\t\t\t\t\t\tguardarConsultar={guardarConsultar}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col m6  s12\">{componente}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}